import os
import shutil

# 原始ImageNet-1k数据集路径
imagenet1k_train = '/home/bobsun/bob/data/imagenet1000/train'
imagenet1k_val = '/home/bobsun/bob/data/imagenet1000/val'

# 目标ImageNet-100数据集的根目录
imagenet100_root = '/home/bobsun/bob/data/imagenet100'

# 五个数据集的类别列表
dataset_classes = [
    """
    n02441942 n01924916 n03000134 n06359193 n03240683 n04522168 n02229544 n03530642 n09468604 n02110185
    n02132136 n03063599 n03347037 n03658185 n03538406 n04074963 n03201208 n02102177 n01829413 n01692333
    n03290653 n02113712 n02123597 n02093647 n02445715 n02100583 n01682714 n07892512 n01608432 n01978287
    n04149813 n03476991 n02837789 n03627232 n03483316 n03670208 n09193705 n01616318 n02071294 n02101388
    n04554684 n03445777 n02492660 n02096177 n03976467 n01729322 n02666196 n04606251 n02094114 n01665541
    n04141327 n07718472 n02095314 n02422699 n04286575 n02027492 n02488291 n01667778 n03337140 n11939491
    n03991062 n01735189 n03146219 n09421951 n02018795 n15075141 n03814639 n02097047 n02096585 n03445924
    n02123394 n04482393 n03724870 n04389033 n03958227 n03785016 n02095570 n03534580 n04376876 n09399592
    n11879895 n07768694 n02113186 n02086910 n04259630 n03216828 n02120079 n03095699 n01534433 n02869837
    n03461385 n12985857 n01776313 n03775546 n02457408 n04325704 n03141823 n02092002 n03598930 n02980441
    """,
    """
    n04507155 n02391049 n02749479 n01773797 n02088364 n02966687 n03532672 n11879895 n03676483 n02097298
    n03733281 n04277352 n02992529 n02814860 n03530642 n02676566 n03534580 n12768682 n02441942 n02165456
    n12620546 n02099429 n03089624 n02978881 n01910747 n03538406 n03814639 n02123597 n02134418 n04041544
    n02100735 n02666196 n04493381 n03775071 n01601694 n02481823 n06359193 n03929660 n02110627 n02769748
    n02051845 n04238763 n07590611 n03345487 n04398044 n02268443 n03930313 n03594734 n02834397 n02093991
    n02071294 n03623198 n02916936 n02086240 n02088094 n04606251 n03131574 n02667093 n02346627 n02110341
    n02111277 n02788148 n03868863 n02397096 n09835506 n07831146 n03063599 n01828970 n01622779 n02100583
    n03127747 n03476991 n04613696 n02123159 n04591157 n01744401 n04019541 n03998194 n03902125 n03000247
    n03777754 n03124170 n01632777 n03840681 n02256656 n06596364 n02814533 n02787622 n03761084 n03781244
    n03950228 n03983396 n02127052 n03495258 n02107908 n02965783 n03207743 n07930864 n03602883 n02782093
    """,
    """
    n02326432 n01632458 n02009912 n02840245 n06359193 n04590129 n01677366 n01685808 n07734744 n02097298
    n03814639 n02096437 n03085013 n03447721 n04090263 n03717622 n02115641 n03976657 n04589890 n07718472
    n04310018 n03933933 n02088466 n04127249 n03404251 n02093647 n02033041 n02092002 n02111277 n03207743
    n02346627 n02437312 n02981792 n02814860 n03944341 n03785016 n02488702 n02115913 n02110806 n03047690
    n04317175 n02871525 n02098286 n03447447 n04423845 n02099601 n04346328 n02488291 n02128925 n02100735
    n02486410 n07892512 n01873310 n03291819 n04505470 n03697007 n04456115 n02494079 n04275548 n02804414
    n02094433 n04023962 n04049303 n02802426 n03355925 n03763968 n04435653 n03983396 n03124170 n02389026
    n04131690 n01955084 n02834397 n03841143 n03837869 n04462240 n03014705 n01755581 n01756291 n02395406
    n02097130 n04005630 n03384352 n02113712 n07590611 n03196217 n04548280 n04239074 n04116512 n02006656
    n04554684 n01930112 n02100236 n04019541 n02444819 n03680355 n03000247 n02086240 n04596742 n03961711
    """,
    """
    n02097209 n02444819 n07836838 n03891251 n01644900 n01742172 n02871525 n02860847 n01685808 n01796340
    n03661043 n02992529 n04604644 n02483362 n01518878 n02910353 n03697007 n03690938 n02095889 n04335435
    n02115913 n02226429 n03710721 n04296562 n03743016 n03535780 n02099849 n07875152 n02894605 n02107142
    n02747177 n02110806 n04505470 n01534433 n03255030 n03627232 n03347037 n02403003 n03884397 n02096294
    n01667778 n04033995 n04273569 n03866082 n03976467 n04344873 n02058221 n07749582 n03393912 n02009912
    n02177972 n03642806 n04023962 n02097474 n12768682 n02790996 n03379051 n04136333 n11879895 n02279972
    n03598930 n11939491 n07760859 n01770393 n01698640 n02124075 n04067472 n01817953 n04070727 n02102480
    n02791270 n04330267 n03394916 n04456115 n02321529 n01914609 n02488291 n02895154 n01818515 n02028035
    n04552348 n03970156 n02948072 n02102973 n07754684 n03843555 n01737021 n04355338 n02111889 n02704792
    n02504013 n01530575 n02917067 n04553703 n01641577 n04525305 n01669191 n01968897 n02489166 n01729977
    """,
    """
    n01558993 n01773797 n01983481 n02086910 n02091831 n02105505 n02113799 n02123045 n02326432 n02788148
    n02974003 n03259280 n03530642 n03764736 n03794056 n03947888 n04127249 n04418357 n04517823 n07753275
    n01692333 n01820546 n02009229 n02087046 n02093428 n02106550 n02113978 n02138441 n02396427 n02804414
    n03017168 n03379051 n03584829 n03775546 n03837869 n04026417 n04136333 n04429376 n04589890 n07831146
    n01729322 n01855672 n02018207 n02089867 n02099849 n02107142 n02114855 n02172182 n02483362 n02859443
    n03032252 n03424325 n03594734 n03777754 n03891251 n04067472 n04229816 n04435653 n04592741 n07836838
    n01735189 n01978455 n02085620 n02089973 n02100583 n02108089 n02116738 n02231487 n02488291 n02869837
    n03062245 n03492542 n03637318 n03785016 n03903868 n04099969 n04238763 n04485082 n07714571 n13037406
    n01749939 n01980166 n02086240 n02090622 n02104029 n02109047 n02119022 n02259212 n02701002 n02877765
    n03085013 n03494278 n03642806 n03787032 n03930630 n04111531 n04336792 n04493381 n07715103 n13040303
    """
]

# 将每个字符串转换为类别ID列表
dataset_classes = [dataset.strip().split() for dataset in dataset_classes]

# 确保目标目录存在
for i in range(1, 6):
    train_dir = os.path.join(imagenet100_root, str(i), 'train')
    val_dir = os.path.join(imagenet100_root, str(i), 'val')
    os.makedirs(train_dir, exist_ok=True)
    os.makedirs(val_dir, exist_ok=True)

# 开始复制文件
for idx, classes in enumerate(dataset_classes):
    dataset_num = idx + 1
    print(f'正在处理数据集 {dataset_num}...')

    # 定义当前数据集的目标目录
    train_dest = os.path.join(imagenet100_root, str(dataset_num), 'train')
    val_dest = os.path.join(imagenet100_root, str(dataset_num), 'val')

    for class_id in classes:
        print(f'  复制类别 {class_id}...')

        # 源目录
        train_src = os.path.join(imagenet1k_train, class_id)
        val_src = os.path.join(imagenet1k_val, class_id)

        # 目标目录
        train_dst = os.path.join(train_dest, class_id)
        val_dst = os.path.join(val_dest, class_id)

        # 复制训练集数据
        if os.path.exists(train_src):
            shutil.copytree(train_src, train_dst)
        else:
            print(f'警告：训练集类别目录 {train_src} 不存在。')

        # 复制验证集数据
        if os.path.exists(val_src):
            shutil.copytree(val_src, val_dst)
        else:
            print(f'警告：验证集类别目录 {val_src} 不存在。')

print('所有数据集已处理完成。')
